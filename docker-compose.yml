# docker-compose.yml (Optimized Version)

services:
  # 1. Redis Vector Database Service
  redis-stack:
    image: redis/redis-stack-server:latest
    container_name: redis_db
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis_data:/data
    networks:
      - rag_network

  # 2. Backend API Service
  rag-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    image: rag-api-image:latest # <-- ADD THIS: Name the image after building
    container_name: rag_api_server
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis-stack
    networks:
      - rag_network

  # 3. File Watcher Service for Automatic Ingestion
  api-watcher:
    image: rag-api-image:latest
    container_name: rag_api_watcher
    # --- MODIFICATION START ---
    # Use the new polling script which is more robust
    command: python polling_watcher.py
    # --- MODIFICATION END ---
    volumes:
      - .:/app
    depends_on:
      - redis-stack
    networks:
      - rag_network
      
  # 4. Frontend Web Server Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: rag_frontend_ui
    ports:
      - "8080:80"
    depends_on:
      - rag-api
    networks:
      - rag_network

volumes:
  redis_data:

networks:
  rag_network:
    driver: bridge